{"version":3,"sources":["App.js","index.js"],"names":["App","txtEmail","txtPassword","btnLogin","btnSignUp","btnLogout","loginMessage","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useEffect","document","getElementById","auth","onAuthStateChanged","firebaseUser","console","log","style","display","className","id","type","placeholder","onClick","email","value","pass","alert","signInWithEmailAndPassword","catch","e","message","createUserWithEmailAndPassword","signOut","ReactDOM","render","StrictMode"],"mappings":"sQAkIeA,MA9Hf,WAEE,IAgBIC,EACAC,EACAC,EACAC,EACAC,EACAC,EA6EJ,OAvFKC,IAASC,KAAKC,QACjBF,IAASG,cAZY,CACrBC,OAAQ,0CACRC,WAAY,2CACZC,YAAa,kDACbC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,gBACnBC,MAAO,+CAiBTC,qBAAU,WACRjB,EAAWkB,SAASC,eAAe,YACnClB,EAAciB,SAASC,eAAe,eACtCjB,EAAWgB,SAASC,eAAe,YACnChB,EAAYe,SAASC,eAAe,aACpCf,EAAYc,SAASC,eAAe,aACpCd,EAAea,SAASC,eAAe,kBACtC,IA2CHb,IAASc,OAAOC,oBAAmB,SAACC,GAC9BA,GACFC,QAAQC,IAAIF,GAEZlB,EAAUqB,MAAMC,QAAU,SAC1BrB,EAAaoB,MAAMC,QAAU,QAE7B1B,EAASyB,MAAMC,QAAU,OACzBzB,EAAYwB,MAAMC,QAAU,OAC5BxB,EAASuB,MAAMC,QAAU,OACzBvB,EAAUsB,MAAMC,QAAU,SAE1BH,QAAQC,IAAI,iBAEZpB,EAAUqB,MAAMC,QAAU,OAC1BrB,EAAaoB,MAAMC,QAAU,OAE7B1B,EAASyB,MAAMC,QAAU,QACzBzB,EAAYwB,MAAMC,QAAU,QAC5BxB,EAASuB,MAAMC,QAAU,SACzBvB,EAAUsB,MAAMC,QAAU,aAK5B,yBAAKC,UAAU,OACb,yBAAKC,GAAG,iBACR,yBAAKA,GAAG,eACN,yBAAKD,UAAU,aACb,2DACA,uBAAGC,GAAG,gBAAN,sBAEA,2BAAOA,GAAG,WAAWC,KAAK,QAAQC,YAAY,UAC9C,2BAAOF,GAAG,cAAcC,KAAK,WAAWC,YAAY,aAEpD,4BAAQF,GAAG,WAAWD,UAAU,MAAMI,QA3E9B,WACdR,QAAQC,IAAI,2CAEZ,IAAMQ,EAAQhC,EAASiC,MACjBC,EAAOjC,EAAYgC,MACnBb,EAAOd,IAASc,OAER,KAAVY,GAAyB,KAATE,EAClBC,MAAM,+CAGUf,EAAKgB,2BAA2BJ,EAAOE,GAC/CG,OAAM,SAACC,GAAD,OAAOf,QAAQC,IAAIc,EAAEC,YAEnCvC,EAASiC,MAAQ,GACjBhC,EAAYgC,MAAQ,MA4DhB,UAGA,4BAAQL,GAAG,YAAYD,UAAU,MAAMI,QA1D9B,WACfR,QAAQC,IAAI,yCAEZ,IAAMQ,EAAQhC,EAASiC,MACjBC,EAAOjC,EAAYgC,MACnBb,EAAOd,IAASc,OAEtBpB,EAASiC,MAAQ,GACjBhC,EAAYgC,MAAQ,GAEJb,EAAKoB,+BAA+BR,EAAOE,GACnDG,OAAM,SAACC,GAAD,OAAOf,QAAQC,IAAIc,EAAEC,cA+C7B,WAGA,4BAAQX,GAAG,YAAYD,UAAU,MAAMI,QA9C9B,WACfzB,IAASc,OAAOqB,YA6CV,eCrHVC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1B,SAASC,eAAe,W","file":"static/js/main.60d72802.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport firebase from \"firebase\";\n\nfunction App() {\n  // Your web app's Firebase configuration\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCs1gnN2k_qGVxfARxwPSLsjJDq3wDk0vs\",\n    authDomain: \"fir-authentication-53e84.firebaseapp.com\",\n    databaseURL: \"https://fir-authentication-53e84.firebaseio.com\",\n    projectId: \"fir-authentication-53e84\",\n    storageBucket: \"fir-authentication-53e84.appspot.com\",\n    messagingSenderId: \"1029350309003\",\n    appId: \"1:1029350309003:web:5f586c4442bc4b43b1688e\",\n  };\n\n  // Initialize Firebase\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  // Declare all elements\n  let txtEmail; // 'email' text field\n  let txtPassword; // 'password' text field\n  let btnLogin; // 'login' button\n  let btnSignUp; // 'signup' button\n  let btnLogout; // 'logout' button\n  let loginMessage; // login message\n\n  // Assign all elements inside the useEffect hook\n  useEffect(() => {\n    txtEmail = document.getElementById(\"txtEmail\");\n    txtPassword = document.getElementById(\"txtPassword\");\n    btnLogin = document.getElementById(\"btnLogin\");\n    btnSignUp = document.getElementById(\"btnSignUp\");\n    btnLogout = document.getElementById(\"btnLogout\");\n    loginMessage = document.getElementById(\"loginMessage\");\n  }, []);\n\n  // Add login event\n  const onLogin = () => {\n    console.log(\"Retreiving email and password values...\");\n    // Get email and password values\n    const email = txtEmail.value;\n    const pass = txtPassword.value;\n    const auth = firebase.auth();\n\n    if (email === \"\" || pass === \"\") {\n      alert(\"Please include a valid Email and Password!\");\n    } else {\n      // Sign in\n      const promise = auth.signInWithEmailAndPassword(email, pass);\n      promise.catch((e) => console.log(e.message));\n      // Reset the Email and Password text fields\n      txtEmail.value = \"\";\n      txtPassword.value = \"\";\n    }\n  };\n\n  // Add signup event\n  const onSignUp = () => {\n    console.log(\"Creating email and password values...\");\n    // Create email and password values\n    const email = txtEmail.value;\n    const pass = txtPassword.value;\n    const auth = firebase.auth();\n    // Reset the Email and Password text fields\n    txtEmail.value = \"\";\n    txtPassword.value = \"\";\n    // Sign up\n    const promise = auth.createUserWithEmailAndPassword(email, pass);\n    promise.catch((e) => console.log(e.message));\n  };\n\n  // Add logout event\n  const onLogout = () => {\n    firebase.auth().signOut();\n  };\n\n  // Add a realtime listener\n  firebase.auth().onAuthStateChanged((firebaseUser) => {\n    if (firebaseUser) {\n      console.log(firebaseUser);\n      // show 'Logout' button and 'Login Message'\n      btnLogout.style.display = \"inline\";\n      loginMessage.style.display = \"block\";\n      // hide rest\n      txtEmail.style.display = \"none\";\n      txtPassword.style.display = \"none\";\n      btnLogin.style.display = \"none\";\n      btnSignUp.style.display = \"none\";\n    } else {\n      console.log(\"not logged in\");\n      // hide 'Logout' button and 'Login Message'\n      btnLogout.style.display = \"none\";\n      loginMessage.style.display = \"none\";\n      // show rest\n      txtEmail.style.display = \"block\";\n      txtPassword.style.display = \"block\";\n      btnLogin.style.display = \"inline\";\n      btnSignUp.style.display = \"inline\";\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <div id=\"ImageSection\"></div>\n      <div id=\"FormSection\">\n        <div className=\"container\">\n          <h1>Hi, Firebase Authentication</h1>\n          <p id=\"loginMessage\">You are logged in!</p>\n\n          <input id=\"txtEmail\" type=\"email\" placeholder=\"Email\" />\n          <input id=\"txtPassword\" type=\"password\" placeholder=\"Password\" />\n\n          <button id=\"btnLogin\" className=\"btn\" onClick={onLogin}>\n            Log In\n          </button>\n          <button id=\"btnSignUp\" className=\"btn\" onClick={onSignUp}>\n            Sign Up\n          </button>\n          <button id=\"btnLogout\" className=\"btn\" onClick={onLogout}>\n            Log Out\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}